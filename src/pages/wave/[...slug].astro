---
import HeaderLayout from "../../layouts/HeaderLayout.astro";

import { getCollection } from "astro:content";

// 1. コレクションエントリーごとに新しいパスを生成
export async function getStaticPaths() {
  const waveEntries = await getCollection('wave');
  return waveEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const titleOnHeader = entry.data.title + " | Wave Graphics"
---

<HeaderLayout
  title={titleOnHeader}
  description={entry.data.description}
>
  <div class="link">
    <a href="/wave">＜波の一覧に戻る</a>
    {entry.data.pairName && <a class="toPair" href={`/wave/${entry.data.pairPath}`}>{entry.data.pairName}へ＞</a>}
  </div>
  <h2>{entry.data.title}</h2>
  <div class="descriptionSlot">
    <span>公開：<time>{entry.data.pubDate.toLocaleDateString('ja-jp')}</time></span>
    <p>{entry.data.description}</p>
    {entry.data.pairName && <p>※右上のリンクから，{entry.data.pairName}もご覧いただけます．</p>}
  </div>
  <section class="mainContent">
    <Content />
  </section>
</HeaderLayout>

<style lang="scss">
  .descriptionSlot {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0 15px;
    box-sizing: border-box;

    p {
      max-width: 707px;
      color: var(--foregroundSub);
    }
  }
  .mainContent {
    box-sizing: border-box;
    width: 100%;
    padding: 0 22px;
  }
  .toPair {
    text-align: right;
  }
  .link {
    justify-content: space-between;
    display: flex;
  }
</style>